@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  vertical-align: baseline;
}
/* Evitamos problemas con las imagenes */
img, picture, video, iframe, figure {
  max-width: 100%;
  width: 100%;
  display: block;
}
/* Reseteamos los enlaces para funcionar como cajas... */
a {
  display: block;
  text-decoration: none;
  color: inherit;
  font-size: inherit;
}
/* ... excepto los que se encuentran en párrafos */
p a {
  display: inline;
}
/* Quitamos los puntos de los <li> */
li {
  list-style-type: none;
}
/* Configuramos anclas suaves */
html {
  scroll-behavior: smooth;
}
/* Desactivamos estilos por defecto de las principales etiquetas de texto */
h1, h2, h3, h4, h5, h6, p, span, a, strong, blockquote, i, b, u, em {
  font-size: 1em;
  font-weight: inherit;
  font-style: inherit;
  text-decoration: none;
  color: inherit;
}
/* Configuramos el texto que seleccionamos */
::-moz-selection {
  background-color: var(--negro);
  color: var(--blanco);}
::selection {
  background-color: var(--negro);
  color: var(--blanco);
}
/* Nivelamos problemas de tipografías y colocación de formularios */
form, input, textarea, select, button, label {
  font-family: inherit;
  font-size: inherit;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto;
  background-color: transparent;
  color: inherit;
  display: block;
  /* opcional */
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
/* Reseteamos las tablas */
table, tr, td {
  border-collapse: collapse;
  border-spacing: 0;
}
/* Evitamos problemas con los SVG */
svg {
  width: 100%;
  display: block;
  fill: currentColor;
}


body {
   height: 100vh;
   display: flex;
   align-items: center;
   justify-content: center;
   background-image: url(../images/miraflores.jpg);
   background-position: center;
   background-repeat: no-repeat;
   background-size: cover;
   color: #fff;
}
.container{
  padding-top: 2rem;
}
/* La clase `.titulo` define los estilos para un elemento de título. Establece el color del texto en
negro, centra el texto tanto horizontal como verticalmente, transforma el texto a mayúsculas,
establece el tamaño de fuente en 4 rem y agrega un borde de 0,3125 rem negro sólido alrededor del
título. */
.titulo{
   color:black;
   display: flex;
   align-items: center;
   justify-content: center;
   text-transform: uppercase;
   font-size: 4rem;
   border: .3125rem solid black;
}
/* La clase `.header` define los estilos para un elemento de encabezado. Establece el color del texto
en negro, centra el texto tanto horizontal como verticalmente, establece el tamaño de fuente en 2
rem y alinea el contenido en el centro. */
.header{
   color:black;
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 2rem;
  
}
/* La clase `.formulario` define los estilos para un elemento de formulario. Establece el ancho en 25
rem, agrega un relleno de 1 rem, un margen de 2 rem y establece el color de fondo en un gris oscuro
semitransparente. También centra el texto dentro del elemento de formulario. */
.formulario {
   width: 25rem;
   padding: 1rem;
   margin: 2rem;
   background-color: rgb(51, 51, 51, 0.602);
   text-align: center;
}
/* La clase `.mb-3` está definiendo estilos para un elemento con la clase "mb-3". */
.mb-3{
   width: 70%;
   display: block;
   margin: auto;
   margin-bottom: 2rem;
   background-color: transparent;
   border: none;
   border-bottom: orange thin solid;
   text-align: center;
   outline: none;
   padding: .2rem 0;
   font-size: .9rem;
   color: white;
}
/* La clase `.button` define los estilos para un elemento de botón. Establece el ancho al 50 % de su
contenedor principal, agrega un margen izquierdo de 6 rem, establece la posición en relativa, agrega
un relleno de 8 px en la parte superior e inferior y 12 px a la izquierda y a la derecha, establece
el tamaño de fuente en 18 px, establece el color del texto en rgb (193, 163, 98), agrega un borde de
2 px sólido rgb (193, 163, 98), establece el radio del borde en 34 px, establece el color de fondo
en transparente, establece el peso de la fuente en 600, agrega un efecto de transición para todas
las propiedades con una duración de 0,3 s y una función de temporización cúbica-bezier, y establece
el desbordamiento en oculto. */
.button {
   width: 50%;
   margin-left: 6rem;
   position: relative;
   padding: 8px 12px;
   font-size: 18px;
   color: rgb(193, 163, 98);
   border: 2px solid rgb(193, 163, 98);
   border-radius: 34px;
   background-color: transparent;
   font-weight: 600;
   transition: all 0.3s cubic-bezier(0.23, 1, 0.320, 1);
   overflow: hidden;
}
/* El selector `.button::before` apunta a un pseudo-elemento (`::before`) que se coloca antes del
contenido de un elemento con la clase `.button`. */
.button::before {
   content: '';
   position: absolute;
   inset: 0;
   margin: auto;
   width: 7.9rem;
   height: 7.9rem;
   border-radius: inherit;
   scale: 0;
   z-index: -1;
   background-color: rgb(193, 163, 98);
   transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
}
/* La regla CSS `.button:hover::before` tiene como objetivo un pseudo-elemento (`::before`) que se
coloca antes del contenido de un elemento con la clase `.button` cuando se desplaza sobre él. */
.button:hover::before {
   scale: 3;
}
/* El código CSS `.button:hover` se dirige a la clase `.button` cuando el usuario pasa el cursor por
encima. */
.button:hover {
   color: #212121;
   scale: 1.1;
   box-shadow: 0 0px 20px rgba(193, 163, 98,0.4);
}
/* El selector `.button:active` apunta a la clase `.button` cuando está en un estado activo, es decir,
cuando el usuario hace clic o presiona. La propiedad `scale: 1;` está configurando la escala del
botón a su tamaño original cuando está activo. Esto se utiliza para proporcionar información visual
al usuario cuando interactúa con el botón. */
.button:active {
   scale: 1;
}
/* El código CSS `.input{ margin-left: 3.125rem; }` está configurando el margen izquierdo de los
elementos con la clase "entrada" en 3.125 rem. Esto creará un espacio en el lado izquierdo del
elemento, alejándolo del borde izquierdo de su contenedor. */
.input{
margin-left: 3.125rem;
}
/* El código CSS `.form-control{ margin-left: 45px; }` establece un margen izquierdo de 45 píxeles para
elementos con la clase "control de formulario". Esto creará un espacio en el lado izquierdo del
elemento, alejándolo del borde izquierdo de su contenedor. */
.form-control{
margin-left: 45px;
}
.columna{
  padding-top: 12rem;
}
/* La clase `.direcionar` está definiendo estilos para un elemento. Establece la propiedad de
visualización en flex, lo que permite que el elemento sea flexible y ajuste su tamaño según su
contenido. También establece la propiedad flex-flow en row nowrap, lo que significa que los
elementos flexibles se mostrarán en una sola fila y no pasarán a la siguiente línea. La propiedad de
justificar el contenido se establece en el centro, lo que alinea horizontalmente los elementos
flexibles en el centro del contenedor. La propiedad align-items se establece en el centro, lo que
alinea verticalmente los elementos flexibles en el centro del contenedor. La propiedad gap establece
el espacio entre los elementos flexibles en 2 rem.La propiedad de transición establece el efecto de transición para la
propiedad de transformación conuna duración de 0,2 s y una función de temporización fácil. La propiedad font-size establece el
tamaño de fuente en 1,3 rem. La propiedad font-weight establece el peso de la fuente en 600. La
propiedad padding-top establece el relleno superior en 1,2 rem. */
.direcionar{
  display:flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  color:white;
  text-transform: uppercase;
  transition: transform .2s ease;
  font-size: 2rem;
  font-weight: 600;
  padding-top: .2rem;
  text-decoration: underline wheat;
}
/* El código CSS `.direcionar:hover{ transform: scale(1.3);}` aplica un efecto de transformación al
elemento con la clase "direcionar" cuando el usuario pasa el cursor sobre él. La propiedad
`transform: scale(1.3);` escala el tamaño del elemento por un factor de 1.3, haciéndolo un 30% más
grande que su tamaño original. Esto crea un efecto visual del elemento que crece en tamaño cuando el
usuario se desplaza sobre él. */
.direcionar:hover{
 transform: scale(1.3);
}
/* El código CSS `.direcionar:hover::after{ transform: scaleX(1);}` apunta al pseudo-elemento `::after`
del elemento con la clase "direcionar" cuando el usuario pasa el cursor sobre él. */
.direcionar:hover::after{
  transform: scaleX(1);
}
/* El selector `.direcionar:active` apunta a la clase `.direcionar` cuando está en un estado activo, es
decir, cuando el usuario hace clic o presiona sobre ella. La propiedad `transform: scale(1.3);` está
escalando el tamaño del elemento por un factor de 1.3, haciéndolo un 30% más grande que su tamaño
original. Esto crea un efecto visual del elemento que crece en tamaño cuando el usuario interactúa
con él. */
.direcionar:active{
  transform: scale(1.3);
}

